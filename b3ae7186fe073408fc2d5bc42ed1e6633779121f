{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25b65c5d_b6345c09",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 515,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-05T12:24:07Z",
      "side": 1,
      "message": "Question) what is this for?",
      "range": {
        "startLine": 510,
        "startChar": 12,
        "endLine": 515,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c169c498_43cf8886",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 515,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-09-05T15:38:12Z",
      "side": 1,
      "message": "It is used in later commits to drive the discovery process.",
      "parentUuid": "25b65c5d_b6345c09",
      "range": {
        "startLine": 510,
        "startChar": 12,
        "endLine": 515,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "676b6785_ddf0ca0c",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 515,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-05T15:44:28Z",
      "side": 1,
      "message": "Then could you group related changes together? CL description and actual change don\u0027t match.",
      "parentUuid": "c169c498_43cf8886",
      "range": {
        "startLine": 510,
        "startChar": 12,
        "endLine": 515,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f33940_66ee4b76",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 515,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-09-05T15:49:07Z",
      "side": 1,
      "message": "This logic preexisted the change operated by this CL.\nI can move it to the CL for discovery but this is just adding churn",
      "parentUuid": "676b6785_ddf0ca0c",
      "range": {
        "startLine": 510,
        "startChar": 12,
        "endLine": 515,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49a95f95_25737ff2",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 515,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-05T16:51:09Z",
      "side": 1,
      "message": "Kind of true, because the `tick()` had been there.\n\nBut preferably you should write as mall change as possible. see: go/small-cls",
      "parentUuid": "92f33940_66ee4b76",
      "range": {
        "startLine": 510,
        "startChar": 12,
        "endLine": 515,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf95ec68_062ad62e",
        "filename": "tools/casimir/src/main.rs",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-05T16:51:09Z",
      "side": 1,
      "message": "Question) Is `select!` ok here?\n\nIf I only take a look at this CL, it\u0027s not clear why you replaced `select!` with join in `controller.rs`. Guess that would be helpful in later CLs, but behavior looks same in this CL. (correct me if I\u0027m wrong)\n\nSo I\u0027m curious whether `select!` here is intended or not.",
      "range": {
        "startLine": 227,
        "startChar": 8,
        "endLine": 227,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a747a718_703aeb9d",
        "filename": "tools/casimir/src/main.rs",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-09-05T19:07:49Z",
      "side": 1,
      "message": "The select! {} pattern has the following flaws which I did not anticipate writing the code initially:\n\n- concurrent futures are cancelled when one of the selected futures completes, this is an issue if a future does meaningful work before completing\n- when a selected future completes, the associated handler blocks the select! block when pending\n\nThat means select! {} is not actually concurrent execution, as opposed to join3 which does run the futures concurrently",
      "parentUuid": "bf95ec68_062ad62e",
      "range": {
        "startLine": 227,
        "startChar": 8,
        "endLine": 227,
        "endChar": 14
      },
      "revId": "b3ae7186fe073408fc2d5bc42ed1e6633779121f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
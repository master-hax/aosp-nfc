{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "58acf1cc_f143a840",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1296738
      },
      "writtenOn": "2020-12-02T13:21:06Z",
      "side": 1,
      "message": "Can we follow below sequence ?\n\nInstead of using appl_dta_mode_flag to skip GetSystemInfo cmd, default skip systemInfo cmd on T5T protocol activation.\nwe can directly send activation NTF ( NFA_RW_FL_ACTIVATION_NTF_PENDING set to false)\nAnd skip reading AFI, skip current harcoded values of defining block size, etc.. such code can be moved to below case 2.\n\nDuring Ndef detection , start with Case 1)\nCase 1) NFC forum T5T tag : 1st we assume tag is T5T NFC Forum complaint , start Ndef detection accordingly\nCase 2) Legacy 15693 : If 1) ndef detection fails , we assuming tag is legacy I93 \u0026 send SystemInfo cmd followed by legacy Ndef detection.",
      "revId": "b793706db08dc1876c32150a859a6183ac98f64b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ca1fb70_58c802d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1231179
      },
      "writtenOn": "2020-12-04T10:54:48Z",
      "side": 1,
      "message": "1) We cannot start with the NFC Forum NDEF detection first as there are a lot of tags in the field that for historical reasons (ISO or NFC Forum standards not defined) did not implement properly or not at all the T5T CC format. Some implement the format but encode the MLEN as for ISO15693 i,e, configuring MLEN with the physical memory size and not the T5T_Area size. Some manufacturers defined proprietary solutions…\n\nThere is a lot of legacy we cannot get rid off. We must continue with ISO first.\n\n2) NFC Forum T5T does not define the (Extended) Get System Info commands but it should be either added in Technical Spec or at least tolerated in testing sequences (up to the testers not to answer and to ignore the commands). Due to CR12 timing deadline, it was not proposed for TR12.0. We can remove appl_dta_mode_flag use in TR12.1 once we solve this point.\n\nThe problem is that today we cannot really make the distinction after the activation between a T5T tag or an ISO15693 tag. It is not really meaningful.\n\nIn a next version of Android, we can implement a correlation between Get System Info and CC MLEN outputs to adjust the allowed memory size for tags supporting both ISO and NFC Forum Read commands. We can propose a convergence keeping legacy but all manufacturers involved in this legacy must participate to ensure we do not break it.",
      "parentUuid": "58acf1cc_f143a840",
      "revId": "b793706db08dc1876c32150a859a6183ac98f64b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd2ba30_29e74ff5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1296738
      },
      "writtenOn": "2021-02-02T04:08:50Z",
      "side": 1,
      "message": "General Remark: A Tag will send responses based on the requests received. An T5T is a ISO15693 Tag with a defined content and content structure in its memory. It is recommended to only read data which are meaningful for an application. A  Transport, Identification or IATA application on the Tag is meaningless to android, since the specific application who can deal and interpret the data correctly is missing. An NDEF message is natively supported and can be generically used.\n\nComment on point 1 above: \n   -If a CC is not contained properly on a Tag it is no CC. This has nothing to \n    do with ISO nor with NFC Forum.  \n   -MLEN vs physical memory size. A T5T may or may not use the entire physical \n    memory size to store NDEF. The point is unclear and not understood. A phone \n    shall only read the NDEF message and not stupidly the entire memory. The \n    content within the T5T_Area but after the NDEF message must be regarded is \n    random and data format after the T5T_Area is unknown. \n   \nComment on point 2 above:\n    -Get_SYSTEM_INFORMATION and EXTENDED_Get_SYSTEM_INFORMATION are not defined \n     by NFC Forum and are optional commands in ISO. A Tag may support one of \n     these CMDs or may not support them. Besides these CMDs do not at all help to \n     distinguish a ISO15693 TAG from an NFC Forum T5T. Any intelligence to do so \n     will break interoperability since a T5T is just a specific memory \n     configuration of an ISO15693 Tag. This memory configuration is flexible and \n     therefore no intelligence will help to distinguish.\n\n     -Therefore NXP recommends to always start with the NDEF detection because \n      NDEF is the application supported natively by android. If this is not \n      successful a trial and error approach could be used to read not well \n      formatted tag as described in point one of Celine. Using GET_SYSTEM will \n      never help to resolve a conflict. A dedicated application (for an \n      application like Transport, ID,…) could then proceed using RF IF cmds to \n      execute a dedicated application.",
      "parentUuid": "9ca1fb70_58c802d1",
      "revId": "b793706db08dc1876c32150a859a6183ac98f64b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c91481_fb89401e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1045863
      },
      "writtenOn": "2021-02-19T16:01:40Z",
      "side": 1,
      "message": "We agree that if a tag does not contain in the CC valid NFC Forum Magic Number, Version number, Access Rights, it is not an NFC Forum tag and will be managed by a dedicated application. \n\nAs T5T has only been defined in 2015, and earlier ISO15693 tags were already in the market, and still are, an ISO15693 tag with NDEF content may look like a fully compliant NFC Forum tag, but in fact there are subtle differences present in the current AOSP code. This determination can only be done with the GetSystemInfo/ExtendedGetSystemInfo commands, which indicate the IC Manufacturing code, and other key information necessary for reading properly the NDEF content and there is code for that in AOSP from multiple tag manufacturers. \nThis specific handling cannot be avoided for maintaining operation with tags that are present in the field. This is independent of starting with the NDEF detection then doing IC Manufacturer specific handling or doing GetSystemInfo and ExtendedGetSystemInfo first. \nThe specific behaviors do not always trigger errors and cannot be systematically used to handle those specific tags. Reading block 0 and getting an MLEN does not also always guarantee we can trust the MLEN.\n\nST’s position is to first find a way to certify AOSP with CR12 while guaranteeing proper operation with all tags in the field (dta flag), then in a second step tackle the bigger problem of how to start with pure NDEF management taking into account tag IC’s manufacturers legacy. \nThis will require involvement of all manufacturers (NXP, ST, TI, On Semiconductors… if we refer to the AOSP code) as ST cannot validate other than its legacy and standard NFC Forum compliant tags.\n\n\nRegarding MLEN vs physical memory size:\nThe problem is that earlier versions than android 9 check whether MLEN and the physical memory length are consistent. If not, the native android read aborts. With android 9 onwards, this check is no longer performed and only the physical memory length is used (not MLEN). \n\nIf tags are programmed, fulfilling NFC Forum T5T rules, with MLEN different from the physical memory size, phones with android 8 and lower will reject these tags and not read the NDEF natively. We see this as an issue till android 8 phones are in the market.",
      "parentUuid": "ddd2ba30_29e74ff5",
      "revId": "b793706db08dc1876c32150a859a6183ac98f64b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a29c13e_cd30ea11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1306902
      },
      "writtenOn": "2021-04-19T09:50:07Z",
      "side": 1,
      "message": "Merge this version first.",
      "parentUuid": "a5c91481_fb89401e",
      "revId": "b793706db08dc1876c32150a859a6183ac98f64b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b7ccdea_ae7d2489",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 10
      },
      "lineNbr": 859,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-13T05:58:44Z",
      "side": 1,
      "message": "Why don\u0027t you handle following codes when response arrives? What\u0027s the reason for waiting for fixed amount time and retry `send_rf()` from the scratch? This can be increased on slower machine.",
      "range": {
        "startLine": 859,
        "startChar": 0,
        "endLine": 859,
        "endChar": 53
      },
      "revId": "ad01bb10284c2555bdabd219f93f1428710df5b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fda1adf9_1db1e485",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 10
      },
      "lineNbr": 859,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-09-13T16:49:01Z",
      "side": 1,
      "message": "I am waiting for the response(s) to all the poll commands being emitted.\nSpecifically this scenario:\n\n- (send poll_command)\n- (no response)\n- tag gets connected\n- send poll_command\n- get poll_response\n- activate interface\n\nI need the retry logic to ensure the tag is dynamically discovered.\nThe short delay just serves to let the poll responses accumulate since the lock on the state is taken while the poll commands are being sent.",
      "parentUuid": "1b7ccdea_ae7d2489",
      "range": {
        "startLine": 859,
        "startChar": 0,
        "endLine": 859,
        "endChar": 53
      },
      "revId": "ad01bb10284c2555bdabd219f93f1428710df5b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "583abe2b_7488251d",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 10
      },
      "lineNbr": 859,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2023-09-18T14:16:55Z",
      "side": 1,
      "message": "I\u0027m asking \u0027what happens cuttlefish takes `\u003e10m` more times for handling responses\u0027. If so, then responses will be discarded by every `tick()` and codes below wouldn\u0027t be called at all.\n\nCuttlefish is the virtual machine and its resources may not be available especially when multiple VMs are running at the same time. -- we\u0027d better not assume hardcoded timeout in Cuttlefish as much as possible.\n\n\nWhat about this?\n\n```\ntick() {\n  send poll command() (L820-L856)\n}\n\n\nreceive_rf() {\n  ...\n  \n  if rf_poll_response.len() \u003e 0 {\n    // handle responses (L861-L914)\n  }\n}\n```\n\nIf we need to test timeout scenario, then my opinion may be wrong, but then I\u0027d propose to make timeouts to be configurable. Correct me if I\u0027m wrong here.",
      "parentUuid": "fda1adf9_1db1e485",
      "range": {
        "startLine": 859,
        "startChar": 0,
        "endLine": 859,
        "endChar": 53
      },
      "revId": "ad01bb10284c2555bdabd219f93f1428710df5b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}
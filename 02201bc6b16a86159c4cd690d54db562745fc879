{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eec34614_5ae3a3a8",
        "filename": "tools/casimir/scripts/t4at.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-06T22:06:48Z",
      "side": 1,
      "message": "What is this timer used for ?",
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ee4d8af_22e63152",
        "filename": "tools/casimir/scripts/t4at.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-06T22:16:49Z",
      "side": 1,
      "message": "Without the sleep, we rapid fire polling frames at the NFC stack and get an error or abort (I forget the actual error) after a couple (i.e. 2 or 3) polling frames. Real polling loops have a set delay in them, so adding this sleep avoids that issue and reflects reality more closely.",
      "parentUuid": "eec34614_5ae3a3a8",
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e6da439_1040fb42",
        "filename": "tools/casimir/scripts/t4at.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-07T00:23:57Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3ee4d8af_22e63152",
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a94c3c_1b4b8cae",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 848,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-06T22:06:48Z",
      "side": 1,
      "message": "Rather than the time from epoch, can you return the timestamp relative to the TCP connection creation ?",
      "range": {
        "startLine": 848,
        "startChar": 17,
        "endLine": 848,
        "endChar": 63
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33b0f4e_818154ba",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 848,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-06T22:16:49Z",
      "side": 1,
      "message": "That works, can you point to how to get that?",
      "parentUuid": "d7a94c3c_1b4b8cae",
      "range": {
        "startLine": 848,
        "startChar": 17,
        "endLine": 848,
        "endChar": 63
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd71829_46fce344",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 848,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-06T22:47:18Z",
      "side": 1,
      "message": "I suggest adding `start_time: std::time::Instant` to the `State` struct, and initializing it to `Instant::now()` in `new`",
      "parentUuid": "d33b0f4e_818154ba",
      "range": {
        "startLine": 848,
        "startChar": 17,
        "endLine": 848,
        "endChar": 63
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3fd3e02_0a5e387e",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 848,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-07T21:05:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebd71829_46fce344",
      "range": {
        "startLine": 848,
        "startChar": 17,
        "endLine": 848,
        "endChar": 63
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa0b2904_1a40e3ca",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-06T22:06:48Z",
      "side": 1,
      "message": "Shouldn\u0027t this notification only be sent when the observe mode is enabled ?",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d078d38_2443b97d",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-06T22:16:49Z",
      "side": 1,
      "message": "No, observe mode is only means that the NFC chip should not respond to the polling loop. We should be getting these notifications whether we\u0027re in observe mode or nto.",
      "parentUuid": "fa0b2904_1a40e3ca",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f460f73_e2bf2766",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-06T22:47:18Z",
      "side": 1,
      "message": "There is no independent way to disable these notifications ? \nThey look very verbose. \n\nDo you get notifications for technologies that are not in the discover configuration?",
      "parentUuid": "8d078d38_2443b97d",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3c6428_fbdafb59",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-07T17:12:31Z",
      "side": 1,
      "message": "When observe mode is off, you get one polling loop and then we respond to initiate the transaction, so it won\u0027t be very verbose.",
      "parentUuid": "5f460f73_e2bf2766",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2cee750_e8110090",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-08T19:19:27Z",
      "side": 1,
      "message": "Quoting the NFC behavior change document:\n\n\u003e When this mode is turned on (i.e PAYLOAD[1] - true)\n\u003e This command is expected to turn on the new passive observer (listen only) mode\n\u003e where the controller should not respond to readers immediately.\n\u003e The controller should still send the RF_FIELD_INFO_NTF when it detects NFC field \u003e activation.\n\u003e The controller should send the new NCI_ANDROID_POLLING_FRAME_NTF with the data\n\u003e found in the polling loop.\n\nAs I understand it, AndroidPollingLoopNtfBuilder is sent ONLY when the observe mode is on.",
      "parentUuid": "bc3c6428_fbdafb59",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad41fe6a_97564b77",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-09T01:54:08Z",
      "side": 1,
      "message": "That isn\u0027t my reading (or intended writing) of that doc, it should *still* send the RF_FIELD_INFO_NTF and the NCI_ANDROID_POLLING_FRAME_NTF when the mode is turned on. I can clarify that in the doc.",
      "parentUuid": "a2cee750_e8110090",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "544f73a2_949042fd",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1884477
      },
      "writtenOn": "2023-12-09T02:13:26Z",
      "side": 1,
      "message": "Sorry to bring that up again but that sounds very counter intuitive to me ðŸ˜•\nIs this vendor extension already implemented by OEMs ?\n\nTo confirm a couple points:\n\n- observe mode only affects listen mode activity\n- NCI_ANDROID_POLLING_FRAME_NTF is sent for detected polling requests \n  from terminal\n\nI would better understand:\n- when the vendor observer mode is on:\n  the controller does not respond to poll requests but sends\n  NCI_ANDROID_POLLING_FRAME_NTF to host instead;    \n- when the vendor observer mode is off:\n  the behavior is _exactly_ as described in the specification, and the host\n  only receives interface activation notifications;\n  \nIs there a particular need for continuously forwarding the notifications ?",
      "parentUuid": "ad41fe6a_97564b77",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c06599b_ef7309ae",
        "filename": "tools/casimir/src/controller.rs",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1978537
      },
      "writtenOn": "2023-12-11T14:45:23Z",
      "side": 1,
      "message": "\u003e Sorry to bring that up again but that sounds very counter intuitive to me ðŸ˜• Is this vendor extension already implemented by OEMs ?\nYes\n\n\u003e To confirm a couple points:\n\n\u003e observe mode only affects listen mode activity\nYes\n\u003e NCI_ANDROID_POLLING_FRAME_NTF is sent for detected polling requests from terminal\nYes\n\u003e I would better understand:\n\n\u003e when the vendor observer mode is on:\n\u003e the controller does not respond to poll requests but sends\n\u003e NCI_ANDROID_POLLING_FRAME_NTF to host instead;\nYes, though I\u0027d strike the \"instead\" and add that it will also send the FIELD_ACTIVATED notificaiton\n\n \u003e when the vendor observer mode is off:\n\u003e the behavior is exactly as described in the specification, and the host\n\u003e only receives interface activation notifications;\nNo, it will also receive the polling loop notifications \n\n\u003e Is there a particular need for continuously forwarding the notifications ?\n\nObserve mode and polling loop fingerprints are separate features. Obviously they\u0027re both NFC features, so they\u0027ll interact, but they both can stand alone.\n\nTo give an example, it is entirely reasonable for an NFC application to use Polling Loop Fingerprints and not Observe mode. A very strait forward example would be if they\u0027re using only NFC-B and are making decisions based on the AFI byte of the NFC-B polling frame.",
      "parentUuid": "544f73a2_949042fd",
      "range": {
        "startLine": 857,
        "startChar": 0,
        "endLine": 863,
        "endChar": 16
      },
      "revId": "02201bc6b16a86159c4cd690d54db562745fc879",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}